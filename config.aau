import win.ui;
import win.region.round;
/*DSG{{*/
var winform = ..win.form(text="设置";right=599;bottom=399;border="none";parent=...)
winform.add()
/*}}*/

import web.layout;
import web.layout.behavior.windowCommand;
import web.layout.behavior.windowSizer;
import web.layout.behavior.tabs; //导入behavior

//创建网页浏览器
var wbLayout = web.layout( winform )

var ahtml = string.load("/res/config.html");
wbLayout.html = ahtml;
 
wbLayout.onHyperlinkClick = function (ltTarget,ltEle,reason,behaviorParams) {
    if(ltEle.id="settings"){
    	win.msgbox("设置");
    }
    if(ltEle.id="minisize"){
    	winform.hitmin();
    }
    if(ltEle.id="close"){
    	winform.close();
    }
    if(ltEle.id="okay"){
    	winform.close();
    }
}

wbLayout.onButtonClick = function (ltTarget,ltEle,reason,behaviorParams) {
	if(ltEle.id="btn"){
		var  v = wbLayout.getEle("b");
		
		v.setValueObject("女性");
		win.msgbox(v.value);
	}
}

// 响应菜单点击事件
wbLayout.onMenuItemClick =  {

	// 事件可以是一个函数或列表,如果是列表键名匹配节点的id或name属性 
	exit = function (ltTarget,ltOwner,reason,behaviorParams) {
		winform.close();
	}
	
	// 在这里没有匹配不到id的节点会触发default函数*/
	default = function (ltTarget,ltOwner,reason,behaviorParams) {
		var ltPopupOwner = web.layout.element( behaviorParams.he );//这是弹出菜单的按钮节点
		winform.msgbox( ltTarget.innerText )
	}
}

import win.ui.shadow;
win.ui.shadow(winform); //添加阴影边框
win.region.round(winform);
winform.show();
win.loopMessage();

