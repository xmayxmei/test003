import win.ui;
import win.util.round;
import win.ui.menu;
import win.region.round;
import web.layout;
import web.layout.behavior.windowCommand;
import web.layout.behavior.windowSizer;
import web.layout.behavior.tabs; //导入behavior
import sqlite;
import console;
import win.ui.atom;
import win.util.tray;
import fsys;
import win.reg;
import fsys.lnk;
import mouse;
import win.ui.shadow;
import confshare;
import confdata;
/*DSG{{*/
var mainForm = ..win.form(text="水宝宝";right=319;bottom=229;border="none";exmode="none";mode="popup";parent=...;sysmenu=false;title=false;topmost=1)
mainForm.add()
/*}}*/

var frmName = "水宝宝";//
var frmTitle = "水宝宝，定时提醒您该喝水啦。";
var titlRemdStr = "^_^亲，该喝水啦！";
var restRemStr = "亲，该休息啦！";
var currRemdTempl = "{0}，建议喝水{1}毫升";//建议喝水模板
var nextRemdTempl = "距离下次喝水还有{0}分钟";//下次喝水模板
var perAmtTempl = "建议您每日喝水{0}毫升";
var remdTimeTabStr = "8:30,9:30,10:50,11:46,12:25,14:00,15:00,16:00,20:38,23:05";
var remdAmtTabStr = "150,200,200,200,150,200,200,200,150,150";
var showDelayIntv = 3;//界面显示延时（分钟）
var remdDelayIntv = 10;//延迟提醒时间间隔（分钟）
var menalDelayIntv = 2;//界面显示延时（分钟）

var isShowWindow = true;//是否显示窗口（可配置）
var isPlaySound = true;//是否声音提醒（可配置）
var showReason = "";//显示窗口原因（时间到显示5分钟，手工显示5分钟）istime,retime,manaul(isdist);
//1随时间、2随动作显示窗口、3显示什么样的窗口，4显示多久、5显示后随时间的变化、6显示后随动作的变化
var showDelay = 0 ;//显示倒计时
var isDelayRemd = false;//是否延时提醒；
var curId=0;//现在提醒哪一个时间？
var passedId = 0;//已提醒次数
var nextTimer = null;//下次喝水时间点
var nextTimeDist = 0;//距离下次喝水时间
var rollIntv = 60*1000;//定时时长,毫秒
var currRemdStr;//建议喝水
var nextRemdStr;//下次喝水
var perAmtStr;//建议每日喝水
//var tray; //创建托盘图标
var remdTimeTab = string.split(remdTimeTabStr,',');
var remdAmtTab = string.split(remdAmtTabStr,','); 
var startDelaySecd = 0;//延迟多久启动定时任务
var difSecd = 3;//消除时间误差
var popmenu = win.ui.popmenu(mainForm);//弹出菜单
var filepath = null;
var db ;
var msgTaskbarRestart = RegisterWindowMessage("taskbarcreated");
var wbLayout = web.layout( mainForm );//创建网页浏览器
configMap={};//全局
var configform;

//重复打开激活
var atom,hwnd = mainForm.atom("2A36B41E-A08C-442B-911A-8587ED58A498");
if(!atom){
	win.show(hwnd,false);
    return ;
}

//启动加载html窗体阴影
var loadFormLayout = function(){
	win.ui.shadow(mainForm); //添加阴影边框
	win.region.round(mainForm);
	var ahtml = string.load("/res/main.html");
	wbLayout.html = ahtml;
	mainForm.modifyStyleEx(0x40000/*_WS_EX_APPWINDOW*/,0x80/*_WS_EX_TOOLWINDOW*/);
}


//RegisterWindowMessage := ::User32.api( "RegisterWindowMessageA", "Long(String lpString)");


//导入初始化数据
var initConfigData = function(){
	var dbfile = confdata.createDb();//安装数据库
	db = sqlite(dbfile);
	confdata.createData(db);//初始化数据库
}
//加载配置数据
var loadConfigData = function(){
	var configTab = db.getTable("SELECT parent,code,value,deft,desc FROM config where parent='user' or parent='sys'");
	for(row,item in configTab){
		//console.log(item['parent'],item['code'],item['value'],item['desc']);
		configMap[item['code']] = item['value'];
	}
	perAmtStr = string.replace(perAmtTempl,"\{0\}",2000);//
}


var fakeUpNum = function(showReason){
	wbLayout.getEle("remindperc").innerHTML ='<div id="num"></div><div id="per">%</div>';
	wbLayout.getEle("buttons").innerHTML = '';
	wbLayout.getEle("per").innerHTML = "%";
	var k = passedId;
	for(i=k*10;k*10+10;1){
		wbLayout.getEle("num").innerHTML = i;
        win.delay(100);
    };
    win.delay(1000);
    passedId++;
}

var fakeDelay = function(showReason){
	//curId = 3;
	wbLayout.getEle("remindtip").innerHTML = nextRemdStr;
	wbLayout.getEle("buttons").innerHTML = '';
	win.delay(2000);
	for(i=25;1;-1){
        mainForm.transparent( i * 10);
        win.delay(50);
    };
    mainForm.show(false);
}
//锁定位置
var setFormPos = function(){
	var w = ::GetSystemMetrics(0x10/*_SM_CXFULLSCREEN*/); 
	var h = ::GetSystemMetrics(0x11/*_SM_CYFULLSCREEN*/) ;
	//mainForm.getPos();
	mainForm.setPos(w-323,h-220,320,230);
}
//窗口显示（时间到）
var fakeShow = function(delay){
	if(win.isVisible(mainForm.hwnd)){
		return;
	}
	/**
	import win.ui.shadow;
	win.ui.shadow(mainForm); //添加阴影边框
	win.region.round(mainForm);
	**/
	if(passedId==0){
		wbLayout.getEle("remindperc").innerHTML = '<div id="remindpercbak">^_^</div>';
		/**
		wbLayout.getEle("num").innerHTML = "^_^";
		wbLayout.getEle("per").innerHTML = "";
		**/
	}else{
		var k = passedId*10;
		wbLayout.getEle("remindperc").innerHTML ='<div id="num"></div><div id="per">%</div>';
		wbLayout.getEle("num").innerHTML = k;
		wbLayout.getEle("per").innerHTML = "%";
	}
	
	if(delay){
		mainForm.transparent(0);
		mainForm.show();
		for(i=1;51;1){
     		mainForm.transparent(i*5);
     		win.delay(40);
 		};
 	}else{
 		x,y = mouse.getPos();
 		mainForm.setPos(x,y);
 		mainForm.show();
 	}
}

//播放声音
var playSound = function(){
	if(configMap['remwin']=='t'){
		import win.mm
		win.mm.playMp3("/res/yy-gaiheshui.mp3");
	}
}

var fakeMove = function(){
	xx,yy = mainForm.getPos();
	var w = ::GetSystemMetrics(0x10/*_SM_CXFULLSCREEN*/); 
	var h = ::GetSystemMetrics(0x11/*_SM_CYFULLSCREEN*/) ;
	//480,255;657,194;
	for(i=1;30;1){
		x = xx+math.round((((w-323)-xx)/30)*i);
		y = yy-math.round((((h-220)-yy)/30)*(-i));
		//console.log(x,y);
    	mainForm.setPos(x,y,320,230);
	};
}


//关闭窗口
var fakeClose =function(){
	//wbLayout.getEle("mainwin").style["background-color"] = "red orange gold yellow"
	for(i=25;1;-1){
        mainForm.transparent( i * 10);
        win.delay(50);
    };
    showDelay = 0;
    showReason ='';
    mainForm.show(false);
}



//完全退出
var fakeExit = function(){
	if(tray){
    	tray.delete();	
    }
    //wbLayout.getEle("remindperc").style["background"] = "";
    
    wbLayout.getEle("remindperc").innerHTML = '<div id="remindpercbak">再见</div>';
    wbLayout.getEle("remindtip").innerHTML ='';
	wbLayout.getEle("buttons").innerHTML = '';
    for(i=25;1;-1){
        mainForm.transparent( i * 10);
        win.delay(50);
    };
    mainForm.close();
}

//时间到显示
var isTimeShow = function(){
	showReason = "istime";
	showDelay = showDelayIntv;
	wbLayout.getEle("remindtip").innerHTML = currRemdStr;
	wbLayout.getEle("buttons").innerHTML = '<a href="" class="button button-rounded" id="okay">知道了</a><a href="" class="button button-rounded" id="delay">稍后提醒</a>';
	fakeShow(true);
	playSound();//
}

//延迟提醒显示
var reTimeShow = function(){
	showReason = "retime";
	showDelay = showDelayIntv;
	var nowTime=time.now();
	nextTimer = nowTime.addminute(showDelay);
	wbLayout.getEle("remindtip").innerHTML = currRemdStr;
	wbLayout.getEle("buttons").innerHTML = '<a href="" class="button button-rounded" id="okay">知道了</a>';
	fakeShow(true);
	playSound();//
}

//手动显示
var manaulShow = function(delay){
	if(nextTimeDist==0&&curId!=null){
		
		if(!isDelayRemd){
			isTimeShow();
		}else{
			reTimeShow();
		}
	}else{
		showReason = "manaul";
		showDelay = menalDelayIntv;
		/**	
		//时间到
		wbLayout.getEle("remindtip").innerHTML = currRemdStr;
		wbLayout.getEle("buttons").innerHTML = '<a href="" class="button button-rounded" id="okay">知道了</a><a href="" class="button button-rounded" id="delay">稍后提醒</a>';
		//再次时间到
		wbLayout.getEle("remindtip").innerHTML = currRemdStr;
		wbLayout.getEle("buttons").innerHTML = '<a href="" class="button button-rounded" id="okay">知道了</a>';
		**/
		//显示时间距离
		wbLayout.getEle("buttons").innerHTML = '';
		wbLayout.getEle("remindtip").innerHTML = nextRemdStr;
		fakeShow(delay);
		/**
		win.delay(2*1000);
		wbLayout.getEle("remindtip").innerHTML = perAmtStr;
		win.delay(5*1000);
		wbLayout.getEle("remindtip").innerHTML = nextRemdStr;
		**/
	}
}



//创建托盘程序
var createWinTray = function(){
	
		tray = win.util.tray(mainForm.hwnd);
		tray.message = 0x400+9981;/*_WM_TRAYMESSAGE*/
		tray.tip = nextRemdStr; //设置鼠标提示 
		//tray.pop(nextRemdStr,frmName,2,0xFFFFFFFF);
	
}

//查询第几次提醒，距离下一次提醒时间距离
var getCurRemind = function(){
	curId = 0,nextTimeDist=0;
	var nowTime=time.now();
	nowTime.format="%H:%M";
	for(k,v in remdTimeTab){
		var nextSetterTime = time(v,"%H:%M");
		if(nowTime<=nextSetterTime){
			curId = k;
			nextTimer = nextSetterTime;
			break;
		}
	}
	if(curId>0){ //大于最大的时间点
		nextTimeDist = math.round((tonumber(time(remdTimeTab[curId],"%H:%M")) -  tonumber(nowTime))/60);
	}
	if(startDelaySecd==0){
		startDelaySecd = (60+difSecd-(nowTime.second==0?60:nowTime.second))*1000;
	}
	//时间到
	if(nowTime==nextTimer){
		if(showDelay<=0){
			if(isDelayRemd){
				showReason = "retime";
				showDelay = showDelayIntv;
				isDelayRemd = false;
			}else{
				showReason = "istime";
				showDelay = showDelayIntv;
			}
		}
	}
}
//查询是否提醒以及提醒语
var getCurRemindInfo = function(){
	
	var pCurrRemdStr = currRemdTempl;
	var pNextRemdStr = nextRemdTempl;
	if(curId>0){
		pCurrRemdStr = string.replace(pCurrRemdStr,"\{0\}",remdTimeTab[curId]);//
		pCurrRemdStr = string.replace(pCurrRemdStr,"\{1\}",remdAmtTab[curId]);//
		pNextRemdStr = string.replace(pNextRemdStr,"\{0\}",tostring(nextTimeDist));//下次提醒内容
	}else{
		pCurrRemdStr = restRemStr;//
		pNextRemdStr = restRemStr;//
	}
	currRemdStr = pCurrRemdStr;
	nextRemdStr = pNextRemdStr;
}
//时间驱动，人工驱动


//链接响应
wbLayout.onHyperlinkClick = function (ltTarget,ltEle,reason,behaviorParams) {
    if(ltEle.id="settings"){//设置
    	if(configform==null){
    		configform,wb = mainForm.loadForm("/res/config.aau", );
    	}
    	//configform.show();
    }
    else if(ltEle.id="minisize"){//最小化
    	mainForm.hitmin();
    }
	else if(ltEle.id="closeit"){//关闭隐藏
    	fakeClose();
    }
    else if(ltEle.id="okay"){ //OK
    	var command = db.prepare("insert into records values(null,'t',200,@create_time)");
    	command.bind.parameterByNamesAt( //绑定命名参数 
    		create_time = time.now();
    	)
		command.step(); 
		fakeUpNum();
    	fakeClose();
    }
    else if(ltEle.id="delay"){//延迟
    	var nowTime=time.now();
    	nextTimer = nowTime.addminute(remdDelayIntv);
    	nextTimeDist = remdDelayIntv;//距离下次多久
    	isDelayRemd = true;
    	getCurRemindInfo();//获取提醒提示信息
    	fakeDelay();
    }
}


// 响应菜单点击事件
wbLayout.onMenuItemClick =  {
	
	// 事件可以是一个函数或列表,如果是列表键名匹配节点的id或name属性 
	exit = function (ltTarget,ltOwner,reason,behaviorParams) {
		fakeExit();
	}
	about = function(ltTarget,ltOwner,reason,behaviorParams){
		if(configform!=null&&win.isVisible(configform.hwnd)){
			
		}else{
			configform,wb =  mainForm.loadForm("/res/config.aau","mainForm");
		}
		var elePanel = wb.getEle("shuibaobao");
		elePanel.traverseMouse("onMouseDown");
	}
	help = function(ltTarget,ltOwner,reason,behaviorParams){
		if(configform!=null&&win.isVisible(configform.hwnd)){
			
		}else{
			configform,wb =  mainForm.loadForm("/res/config.aau","mainForm");
		}
		var elePanel = wb.getEle("help");
		elePanel.traverseMouse("onMouseDown");
	}
	weibo = function(ltTarget,ltOwner,reason,behaviorParams){
		process.execute(ltTarget.getAttribute("hf"));
		return true;//
	}
	
	config = function(ltTarget,ltOwner,reason,behaviorParams){
		if(configform!=null&&win.isVisible(configform.hwnd)){
			
		}else{
			configform,wb =  mainForm.loadForm("/res/config.aau","mainForm");
		}
		var elePanel = wb.getEle("personset");
		elePanel.traverseMouse("onMouseDown");
	}	
	
	// 在这里没有匹配不到id的节点会触发default函数*/
	default = function (ltTarget,ltOwner,reason,behaviorParams) {
		var ltPopupOwner = web.layout.element( behaviorParams.he );//这是弹出菜单的按钮节点
		mainForm.msgbox( ltTarget.innerText );
	}
}

//创建弹出菜单
var createPopMenu = function(){
	//mainForm.popmenu
	popmenu.add('打开(&O\)',function(id){
		//在下面输入菜单响应代码
		manaulShow(true);
	});
	popmenu.add('设置(&S\)',function(id){
		//在下面输入菜单响应代码
		if(configform!=null&&win.isVisible(configform.hwnd)){
			
		}else{
			configform,wb =  mainForm.loadForm("/res/config.aau","mainForm");
		}
	});
	popmenu.add();//分隔线
	
	popmenu.add('退出(&X)',function(id){ 
		fakeExit();
	});
}

//定时器，每分钟探测一次是否到时间点了。
var taskRun = function(){
	getCurRemind(); //获取是否提醒，及提醒次数，数据
    getCurRemindInfo();//获取提醒提示信息
	//remindByAlertOrTip();
	
	var tmId = mainForm.addtimer( 
    	startDelaySecd,
    	function(hwnd,msg,id,tick){
			getCurRemind(); //获取是否提醒，及提醒次数，数据
        	getCurRemindInfo();//获取提醒提示信息
        	//createWinTray(tray,nextRemdStr,frmName,nextRemdStr); //电脑托盘
			//remindByAlertOrTip();//提醒
			//是否在显示中
			if(showDelay>0){
				showDelay--;
				if(nextTimeDist==0){//正在手动显示，时间到了怎么办？直接变化到按钮状态
					if(showReason=='istime'){
						isTimeShow();
					}
					else if(showReason=='retime'){
						reTimeShow();
					}
					else if(showReason=='manaul'){
						isTimeShow();
					}
				}
				if(showDelay==0){
					showReason = '';
				}
			}else{//已隐藏
				if(nextTimeDist==0&&curId>0){
					if(isDelayRemd){
						reTimeShow();
					}else{
						isTimeShow();
					}
					return ;
				}
				//超出最后时间30分钟，并且在当前24点之前，提醒休息一次
				if(showReason=='istime'){
					isTimeShow();
				}
				else if(showReason=='retime'){
					reTimeShow();
				}
				else if(showReason=='manaul'){
					manaulShow(true);
				}else{
					fakeClose();//默认关闭
				}
			}
        	return rollIntv;
    	}
	)
}



//事件监听器
mainForm.wndproc = function(hwnd,message,wparam,lparam){	
    select(message) {//判断消息类型
        case 0x10/*_WM_CLOSE窗口关闭消息*/{
            //这里可以写窗口关闭时回调信息
            //::PostMessage(mainForm.hwnd, 0x112,0xF020, 0);
    		//mainForm.show( false );
    		//return false;
    		//fakeExit();
    		//tray.delete();
        }
        /**
        case( 0x112/*_WM_SYSCOMMAND*/ ){ //系统命令消息
            if( wparam == 0xF020/*_SC_MINIMIZE*/ ){ //用户点击了最小化按钮
                mainForm.show(false); //隐藏窗口
                return true;//阻击默认消息传递，取消最小化过程
            }
        }**/
        case (0x400+9981/*_WM_TRAYMESSAGE*/) { //托盘图标消息
            select(lparam){
                case (0x203){//双击托盘图标打开窗口
                   
                   manaulShow(true);//还原窗口
                }
                case (0x205/*_WM_RBUTTONUP*/){//单击鼠标右键弹出菜单
	    			x,y = mouse.getPos();
	    			//弹出托盘菜单以前，一定要前置主窗口中，不然不点击菜单不会消失
	    			win.setForeground(mainForm.hwnd)
	    			popmenu.popup( x,y,true );
                }
                case (0x0202){//单击鼠标左键前置窗口
                    win.setForeground(mainForm.hwnd);
                }
                
            }
        }
        case msgTaskbarRestart/*任务栏重建*/{
            win.util.tray.Shell_NotifyIcon(0x2/*_NIM_DELETE*/,tray.m_tnd);
            win.util.tray.Shell_NotifyIcon(0x0/*_NIM_ADD*/,tray.m_tnd);
        }
        case( 0x112/*_WM_SYSCOMMAND*/ ){ //系统命令消息
			if( wparam == 0xF020/*_SC_MINIMIZE*/ ){ //用户点击了最小化按钮
            	mainForm.show(false); //隐藏窗口
            	return true;//阻击默认消息传递，取消最小化过程
			} 
		}
    }
    //无返回值则继续调用默认回调函数
}


//第一次运行
confshare.createLnk(frmName);
confshare.regAutoRun(true);
initConfigData();//数据初始化

//启动
loadConfigData();//加载初始化数据
loadFormLayout();//加载窗口
createPopMenu();//菜单
createWinTray();//托盘
getCurRemind(); //获取是否提醒，及提醒次数，数据
getCurRemindInfo();//获取提醒提示信息
manaulShow(false);//显示界面
fakeMove();//移动界面

//运行
taskRun();//执行任务
win.loopMessage();

